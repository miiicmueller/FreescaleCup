   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata
  18              		.align	2
  19              	.LC3:
  20 0000 0D0A00   		.ascii	"\015\012\000"
  21 0003 00       		.align	2
  22              	.LC5:
  23 0004 4C3A00   		.ascii	"L:\000"
  24 0007 00       		.align	2
  25              	.LC8:
  26 0008 25582C00 		.ascii	"%X,\000"
  27              		.align	2
  28              	.LC11:
  29 000c 255800   		.ascii	"%X\000"
  30 000f 00       		.align	2
  31              	.LC13:
  32 0010 2C00     		.ascii	",\000"
  33 0012 0000     		.section	.text.main,"ax",%progbits
  34              		.align	2
  35              		.global	main
  36              		.code	16
  37              		.thumb_func
  39              	main:
  40              	.LFB0:
  41              		.file 1 "../Sources/main.c"
   1:../Sources/main.c **** #include "derivative.h" /* include peripheral declarations */
   2:../Sources/main.c **** #include "TFC\TFC.h"
   3:../Sources/main.c **** 
   4:../Sources/main.c **** int main(void)
   5:../Sources/main.c **** {
  42              		.loc 1 5 0
  43              		.cfi_startproc
  44 0000 90B5     		push	{r4, r7, lr}
  45              	.LCFI0:
  46              		.cfi_def_cfa_offset 12
  47              		.cfi_offset 4, -12
  48              		.cfi_offset 7, -8
  49              		.cfi_offset 14, -4
  50 0002 83B0     		sub	sp, sp, #12
  51              	.LCFI1:
  52              		.cfi_def_cfa_offset 24
  53 0004 00AF     		add	r7, sp, #0
  54              	.LCFI2:
  55              		.cfi_def_cfa_register 7
   6:../Sources/main.c **** 	uint32_t t,i=0;
  56              		.loc 1 6 0
  57 0006 0023     		mov	r3, #0
  58 0008 3B60     		str	r3, [r7]
   7:../Sources/main.c **** 	
   8:../Sources/main.c **** 	TFC_Init();
  59              		.loc 1 8 0
  60 000a FFF7FEFF 		bl	TFC_Init
  61              	.L29:
   9:../Sources/main.c **** 	
  10:../Sources/main.c **** 	//Un commentaire idiot
  11:../Sources/main.c **** 	
  12:../Sources/main.c **** 	for(;;)
  13:../Sources/main.c **** 	{	   
  14:../Sources/main.c **** 		//TFC_Task must be called in your main loop.  This keeps certain processing happy (I.E. Serial po
  15:../Sources/main.c **** 			TFC_Task();
  62              		.loc 1 15 0
  63 000e FFF7FEFF 		bl	TFC_Task
  16:../Sources/main.c **** 
  17:../Sources/main.c **** 			//This Demo program will look at the middle 2 switch to select one of 4 demo modes.
  18:../Sources/main.c **** 			//Let's look at the middle 2 switches
  19:../Sources/main.c **** 			switch((TFC_GetDIP_Switch()>>1)&0x03)
  64              		.loc 1 19 0
  65 0012 FFF7FEFF 		bl	TFC_GetDIP_Switch
  66 0016 031C     		mov	r3, r0
  67 0018 5B08     		lsr	r3, r3, #1
  68 001a DBB2     		uxtb	r3, r3
  69 001c 1A1C     		mov	r2, r3
  70 001e 0323     		mov	r3, #3
  71 0020 1340     		and	r3, r2
  72 0022 022B     		cmp	r3, #2
  73 0024 00D1     		bne	.LCB30
  74 0026 79E0     		b	.L4	@long jump
  75              	.LCB30:
  76 0028 032B     		cmp	r3, #3
  77 002a 00D1     		bne	.LCB32
  78 002c 9CE0     		b	.L5	@long jump
  79              	.LCB32:
  80 002e 012B     		cmp	r3, #1
  81 0030 3ED0     		beq	.L3
  20:../Sources/main.c **** 			{
  21:../Sources/main.c **** 			default:
  22:../Sources/main.c **** 			case 0 :
  23:../Sources/main.c **** 				//Demo mode 0 just tests the switches and LED's
  24:../Sources/main.c **** 				if(TFC_PUSH_BUTTON_0_PRESSED)
  82              		.loc 1 24 0
  83 0032 8C4B     		ldr	r3, .L32
  84 0034 1A69     		ldr	r2, [r3, #16]
  85 0036 8023     		mov	r3, #128
  86 0038 9B01     		lsl	r3, r3, #6
  87 003a 1340     		and	r3, r2
  88 003c 04D0     		beq	.L6
  25:../Sources/main.c **** 					TFC_BAT_LED0_ON;
  89              		.loc 1 25 0
  90 003e 8A4B     		ldr	r3, .L32+4
  91 0040 8022     		mov	r2, #128
  92 0042 5200     		lsl	r2, r2, #1
  93 0044 5A60     		str	r2, [r3, #4]
  94 0046 03E0     		b	.L7
  95              	.L6:
  26:../Sources/main.c **** 				else
  27:../Sources/main.c **** 					TFC_BAT_LED0_OFF;
  96              		.loc 1 27 0
  97 0048 874B     		ldr	r3, .L32+4
  98 004a 8022     		mov	r2, #128
  99 004c 5200     		lsl	r2, r2, #1
 100 004e 9A60     		str	r2, [r3, #8]
 101              	.L7:
  28:../Sources/main.c **** 				
  29:../Sources/main.c **** 				if(TFC_PUSH_BUTTON_1_PRESSED)
 102              		.loc 1 29 0
 103 0050 844B     		ldr	r3, .L32
 104 0052 1A69     		ldr	r2, [r3, #16]
 105 0054 8023     		mov	r3, #128
 106 0056 9B02     		lsl	r3, r3, #10
 107 0058 1340     		and	r3, r2
 108 005a 04D0     		beq	.L8
  30:../Sources/main.c **** 					TFC_BAT_LED3_ON;
 109              		.loc 1 30 0
 110 005c 824B     		ldr	r3, .L32+4
 111 005e 8022     		mov	r2, #128
 112 0060 1201     		lsl	r2, r2, #4
 113 0062 5A60     		str	r2, [r3, #4]
 114 0064 03E0     		b	.L9
 115              	.L8:
  31:../Sources/main.c **** 				else
  32:../Sources/main.c **** 					TFC_BAT_LED3_OFF;
 116              		.loc 1 32 0
 117 0066 804B     		ldr	r3, .L32+4
 118 0068 8022     		mov	r2, #128
 119 006a 1201     		lsl	r2, r2, #4
 120 006c 9A60     		str	r2, [r3, #8]
 121              	.L9:
  33:../Sources/main.c **** 				
  34:../Sources/main.c **** 				
  35:../Sources/main.c **** 				if(TFC_GetDIP_Switch()&0x01)
 122              		.loc 1 35 0
 123 006e FFF7FEFF 		bl	TFC_GetDIP_Switch
 124 0072 031C     		mov	r3, r0
 125 0074 1A1C     		mov	r2, r3
 126 0076 0123     		mov	r3, #1
 127 0078 1340     		and	r3, r2
 128 007a 04D0     		beq	.L10
  36:../Sources/main.c **** 					TFC_BAT_LED1_ON;
 129              		.loc 1 36 0
 130 007c 7A4B     		ldr	r3, .L32+4
 131 007e 8022     		mov	r2, #128
 132 0080 9200     		lsl	r2, r2, #2
 133 0082 5A60     		str	r2, [r3, #4]
 134 0084 03E0     		b	.L11
 135              	.L10:
  37:../Sources/main.c **** 				else
  38:../Sources/main.c **** 					TFC_BAT_LED1_OFF;
 136              		.loc 1 38 0
 137 0086 784B     		ldr	r3, .L32+4
 138 0088 8022     		mov	r2, #128
 139 008a 9200     		lsl	r2, r2, #2
 140 008c 9A60     		str	r2, [r3, #8]
 141              	.L11:
  39:../Sources/main.c **** 				
  40:../Sources/main.c **** 				if(TFC_GetDIP_Switch()&0x08)
 142              		.loc 1 40 0
 143 008e FFF7FEFF 		bl	TFC_GetDIP_Switch
 144 0092 031C     		mov	r3, r0
 145 0094 1A1C     		mov	r2, r3
 146 0096 0823     		mov	r3, #8
 147 0098 1340     		and	r3, r2
 148 009a 04D0     		beq	.L12
  41:../Sources/main.c **** 					TFC_BAT_LED2_ON;
 149              		.loc 1 41 0
 150 009c 724B     		ldr	r3, .L32+4
 151 009e 8022     		mov	r2, #128
 152 00a0 D200     		lsl	r2, r2, #3
 153 00a2 5A60     		str	r2, [r3, #4]
  42:../Sources/main.c **** 				else
  43:../Sources/main.c **** 					TFC_BAT_LED2_OFF;
  44:../Sources/main.c **** 				
  45:../Sources/main.c **** 				break;
 154              		.loc 1 45 0
 155 00a4 DDE0     		b	.L14
 156              	.L12:
  43:../Sources/main.c **** 					TFC_BAT_LED2_OFF;
 157              		.loc 1 43 0
 158 00a6 704B     		ldr	r3, .L32+4
 159 00a8 8022     		mov	r2, #128
 160 00aa D200     		lsl	r2, r2, #3
 161 00ac 9A60     		str	r2, [r3, #8]
 162              		.loc 1 45 0
 163 00ae D8E0     		b	.L14
 164              	.L3:
  46:../Sources/main.c **** 					
  47:../Sources/main.c **** 			case 1:
  48:../Sources/main.c **** 				
  49:../Sources/main.c **** 				//Demo mode 1 will just move the servos with the on-board potentiometers
  50:../Sources/main.c **** 				if(TFC_Ticker[0]>=20)
 165              		.loc 1 50 0
 166 00b0 6E4B     		ldr	r3, .L32+8
 167 00b2 1B68     		ldr	r3, [r3]
 168 00b4 132B     		cmp	r3, #19
 169 00b6 12D9     		bls	.L15
  51:../Sources/main.c **** 				{
  52:../Sources/main.c **** 					TFC_Ticker[0] = 0; //reset the Ticker
 170              		.loc 1 52 0
 171 00b8 6C4B     		ldr	r3, .L32+8
 172 00ba 0022     		mov	r2, #0
 173 00bc 1A60     		str	r2, [r3]
  53:../Sources/main.c **** 					//Every 20 mSeconds, update the Servos
  54:../Sources/main.c **** 					TFC_SetServo(0,TFC_ReadPot(0));
 174              		.loc 1 54 0
 175 00be 0020     		mov	r0, #0
 176 00c0 FFF7FEFF 		bl	TFC_ReadPot
 177 00c4 031C     		add	r3, r0, #0
 178 00c6 0020     		mov	r0, #0
 179 00c8 191C     		add	r1, r3, #0
 180 00ca FFF7FEFF 		bl	TFC_SetServo
  55:../Sources/main.c **** 					TFC_SetServo(1,TFC_ReadPot(1));
 181              		.loc 1 55 0
 182 00ce 0120     		mov	r0, #1
 183 00d0 FFF7FEFF 		bl	TFC_ReadPot
 184 00d4 031C     		add	r3, r0, #0
 185 00d6 0120     		mov	r0, #1
 186 00d8 191C     		add	r1, r3, #0
 187 00da FFF7FEFF 		bl	TFC_SetServo
 188              	.L15:
  56:../Sources/main.c **** 				}
  57:../Sources/main.c **** 				//Let's put a pattern on the LEDs
  58:../Sources/main.c **** 				if(TFC_Ticker[1] >= 125)
 189              		.loc 1 58 0
 190 00de 634B     		ldr	r3, .L32+8
 191 00e0 5B68     		ldr	r3, [r3, #4]
 192 00e2 7C2B     		cmp	r3, #124
 193 00e4 0FD9     		bls	.L16
  59:../Sources/main.c **** 				{
  60:../Sources/main.c **** 					TFC_Ticker[1] = 0;
 194              		.loc 1 60 0
 195 00e6 614B     		ldr	r3, .L32+8
 196 00e8 0022     		mov	r2, #0
 197 00ea 5A60     		str	r2, [r3, #4]
  61:../Sources/main.c **** 					t++;
 198              		.loc 1 61 0
 199 00ec 7B68     		ldr	r3, [r7, #4]
 200 00ee 0133     		add	r3, r3, #1
 201 00f0 7B60     		str	r3, [r7, #4]
  62:../Sources/main.c **** 					if(t>4)
 202              		.loc 1 62 0
 203 00f2 7B68     		ldr	r3, [r7, #4]
 204 00f4 042B     		cmp	r3, #4
 205 00f6 01D9     		bls	.L17
  63:../Sources/main.c **** 					{
  64:../Sources/main.c **** 						t=0;
 206              		.loc 1 64 0
 207 00f8 0023     		mov	r3, #0
 208 00fa 7B60     		str	r3, [r7, #4]
 209              	.L17:
  65:../Sources/main.c **** 					}			
  66:../Sources/main.c **** 					TFC_SetBatteryLED_Level(t);
 210              		.loc 1 66 0
 211 00fc 7B68     		ldr	r3, [r7, #4]
 212 00fe DBB2     		uxtb	r3, r3
 213 0100 181C     		mov	r0, r3
 214 0102 FFF7FEFF 		bl	TFC_SetBatteryLED_Level
 215              	.L16:
  67:../Sources/main.c **** 				}
  68:../Sources/main.c **** 				
  69:../Sources/main.c **** 				TFC_SetMotorPWM(0,0); //Make sure motors are off
 216              		.loc 1 69 0
 217 0106 0022     		mov	r2, #0
 218 0108 0023     		mov	r3, #0
 219 010a 101C     		add	r0, r2, #0
 220 010c 191C     		add	r1, r3, #0
 221 010e FFF7FEFF 		bl	TFC_SetMotorPWM
  70:../Sources/main.c **** 				TFC_HBRIDGE_DISABLE;
 222              		.loc 1 70 0
 223 0112 574B     		ldr	r3, .L32+12
 224 0114 8022     		mov	r2, #128
 225 0116 9203     		lsl	r2, r2, #14
 226 0118 9A60     		str	r2, [r3, #8]
  71:../Sources/main.c **** 			
  72:../Sources/main.c **** 
  73:../Sources/main.c **** 				break;
 227              		.loc 1 73 0
 228 011a A2E0     		b	.L14
 229              	.L4:
  74:../Sources/main.c **** 				
  75:../Sources/main.c **** 			case 2 :
  76:../Sources/main.c **** 				
  77:../Sources/main.c **** 				//Demo Mode 2 will use the Pots to make the motors move
  78:../Sources/main.c **** 				TFC_HBRIDGE_ENABLE;
 230              		.loc 1 78 0
 231 011c 544B     		ldr	r3, .L32+12
 232 011e 8022     		mov	r2, #128
 233 0120 9203     		lsl	r2, r2, #14
 234 0122 5A60     		str	r2, [r3, #4]
  79:../Sources/main.c **** 				TFC_SetMotorPWM(TFC_ReadPot(0),TFC_ReadPot(1));
 235              		.loc 1 79 0
 236 0124 0020     		mov	r0, #0
 237 0126 FFF7FEFF 		bl	TFC_ReadPot
 238 012a 041C     		add	r4, r0, #0
 239 012c 0120     		mov	r0, #1
 240 012e FFF7FEFF 		bl	TFC_ReadPot
 241 0132 031C     		add	r3, r0, #0
 242 0134 201C     		add	r0, r4, #0
 243 0136 191C     		add	r1, r3, #0
 244 0138 FFF7FEFF 		bl	TFC_SetMotorPWM
  80:../Sources/main.c **** 						
  81:../Sources/main.c **** 				//Let's put a pattern on the LEDs
  82:../Sources/main.c **** 				if(TFC_Ticker[1] >= 125)
 245              		.loc 1 82 0
 246 013c 4B4B     		ldr	r3, .L32+8
 247 013e 5B68     		ldr	r3, [r3, #4]
 248 0140 7C2B     		cmp	r3, #124
 249 0142 00D8     		bhi	.LCB194
 250 0144 8AE0     		b	.L30	@long jump
 251              	.LCB194:
  83:../Sources/main.c **** 					{
  84:../Sources/main.c **** 						TFC_Ticker[1] = 0;
 252              		.loc 1 84 0
 253 0146 494B     		ldr	r3, .L32+8
 254 0148 0022     		mov	r2, #0
 255 014a 5A60     		str	r2, [r3, #4]
  85:../Sources/main.c **** 							t++;
 256              		.loc 1 85 0
 257 014c 7B68     		ldr	r3, [r7, #4]
 258 014e 0133     		add	r3, r3, #1
 259 0150 7B60     		str	r3, [r7, #4]
  86:../Sources/main.c **** 							if(t>4)
 260              		.loc 1 86 0
 261 0152 7B68     		ldr	r3, [r7, #4]
 262 0154 042B     		cmp	r3, #4
 263 0156 01D9     		bls	.L19
  87:../Sources/main.c **** 							{
  88:../Sources/main.c **** 								t=0;
 264              		.loc 1 88 0
 265 0158 0023     		mov	r3, #0
 266 015a 7B60     		str	r3, [r7, #4]
 267              	.L19:
  89:../Sources/main.c **** 							}			
  90:../Sources/main.c **** 						TFC_SetBatteryLED_Level(t);
 268              		.loc 1 90 0
 269 015c 7B68     		ldr	r3, [r7, #4]
 270 015e DBB2     		uxtb	r3, r3
 271 0160 181C     		mov	r0, r3
 272 0162 FFF7FEFF 		bl	TFC_SetBatteryLED_Level
  91:../Sources/main.c **** 					}
  92:../Sources/main.c **** 				break;
 273              		.loc 1 92 0
 274 0166 79E0     		b	.L30
 275              	.L5:
  93:../Sources/main.c **** 			
  94:../Sources/main.c **** 			case 3 :
  95:../Sources/main.c **** 			
  96:../Sources/main.c **** 				//Demo Mode 3 will be in Freescale Garage Mode.  It will beam data from the Camera to the 
  97:../Sources/main.c **** 				//Labview Application
  98:../Sources/main.c **** 				
  99:../Sources/main.c **** 		
 100:../Sources/main.c **** 				if(TFC_Ticker[0]>100 && LineScanImageReady==1)
 276              		.loc 1 100 0
 277 0168 404B     		ldr	r3, .L32+8
 278 016a 1B68     		ldr	r3, [r3]
 279 016c 642B     		cmp	r3, #100
 280 016e 00D8     		bhi	.LCB219
 281 0170 76E0     		b	.L31	@long jump
 282              	.LCB219:
 283              		.loc 1 100 0 is_stmt 0
 284 0172 404B     		ldr	r3, .L32+16
 285 0174 1B78     		ldrb	r3, [r3]
 286 0176 DBB2     		uxtb	r3, r3
 287 0178 012B     		cmp	r3, #1
 288 017a 00D0     		beq	.LCB224
 289 017c 70E0     		b	.L31	@long jump
 290              	.LCB224:
 101:../Sources/main.c **** 					{
 102:../Sources/main.c **** 					 TFC_Ticker[0] = 0;
 291              		.loc 1 102 0 is_stmt 1
 292 017e 3B4B     		ldr	r3, .L32+8
 293 0180 0022     		mov	r2, #0
 294 0182 1A60     		str	r2, [r3]
 103:../Sources/main.c **** 					 LineScanImageReady=0;
 295              		.loc 1 103 0
 296 0184 3B4B     		ldr	r3, .L32+16
 297 0186 0022     		mov	r2, #0
 298 0188 1A70     		strb	r2, [r3]
 104:../Sources/main.c **** 					 TERMINAL_PRINTF("\r\n");
 299              		.loc 1 104 0
 300 018a 3B4A     		ldr	r2, .L32+20
 301 018c 3B4B     		ldr	r3, .L32+24
 302 018e 101C     		mov	r0, r2
 303 0190 191C     		mov	r1, r3
 304 0192 FFF7FEFF 		bl	Qprintf
 105:../Sources/main.c **** 					 TERMINAL_PRINTF("L:");
 305              		.loc 1 105 0
 306 0196 384A     		ldr	r2, .L32+20
 307 0198 394B     		ldr	r3, .L32+28
 308 019a 101C     		mov	r0, r2
 309 019c 191C     		mov	r1, r3
 310 019e FFF7FEFF 		bl	Qprintf
 106:../Sources/main.c **** 					 
 107:../Sources/main.c **** 					 	if(t==0)
 311              		.loc 1 107 0
 312 01a2 7B68     		ldr	r3, [r7, #4]
 313 01a4 002B     		cmp	r3, #0
 314 01a6 02D1     		bne	.L21
 108:../Sources/main.c **** 					 		t=3;
 315              		.loc 1 108 0
 316 01a8 0323     		mov	r3, #3
 317 01aa 7B60     		str	r3, [r7, #4]
 318 01ac 02E0     		b	.L22
 319              	.L21:
 109:../Sources/main.c **** 					 	else
 110:../Sources/main.c **** 					 		t--;
 320              		.loc 1 110 0
 321 01ae 7B68     		ldr	r3, [r7, #4]
 322 01b0 013B     		sub	r3, r3, #1
 323 01b2 7B60     		str	r3, [r7, #4]
 324              	.L22:
 111:../Sources/main.c **** 					 	
 112:../Sources/main.c **** 						 TFC_SetBatteryLED_Level(t);
 325              		.loc 1 112 0
 326 01b4 7B68     		ldr	r3, [r7, #4]
 327 01b6 DBB2     		uxtb	r3, r3
 328 01b8 181C     		mov	r0, r3
 329 01ba FFF7FEFF 		bl	TFC_SetBatteryLED_Level
 113:../Sources/main.c **** 						
 114:../Sources/main.c **** 						 for(i=0;i<128;i++)
 330              		.loc 1 114 0
 331 01be 0023     		mov	r3, #0
 332 01c0 3B60     		str	r3, [r7]
 333 01c2 10E0     		b	.L23
 334              	.L24:
 115:../Sources/main.c **** 						 {
 116:../Sources/main.c **** 								 TERMINAL_PRINTF("%X,",LineScanImage0[i]);
 335              		.loc 1 116 0
 336 01c4 2F4B     		ldr	r3, .L32+32
 337 01c6 1A68     		ldr	r2, [r3]
 338 01c8 3B68     		ldr	r3, [r7]
 339 01ca 5B00     		lsl	r3, r3, #1
 340 01cc D318     		add	r3, r2, r3
 341 01ce 1B88     		ldrh	r3, [r3]
 342 01d0 9BB2     		uxth	r3, r3
 343 01d2 2949     		ldr	r1, .L32+20
 344 01d4 2C4A     		ldr	r2, .L32+36
 345 01d6 081C     		mov	r0, r1
 346 01d8 111C     		mov	r1, r2
 347 01da 1A1C     		mov	r2, r3
 348 01dc FFF7FEFF 		bl	Qprintf
 114:../Sources/main.c **** 						 for(i=0;i<128;i++)
 349              		.loc 1 114 0
 350 01e0 3B68     		ldr	r3, [r7]
 351 01e2 0133     		add	r3, r3, #1
 352 01e4 3B60     		str	r3, [r7]
 353              	.L23:
 114:../Sources/main.c **** 						 for(i=0;i<128;i++)
 354              		.loc 1 114 0 is_stmt 0
 355 01e6 3B68     		ldr	r3, [r7]
 356 01e8 7F2B     		cmp	r3, #127
 357 01ea EBD9     		bls	.L24
 117:../Sources/main.c **** 						 }
 118:../Sources/main.c **** 						
 119:../Sources/main.c **** 						 for(i=0;i<128;i++)
 358              		.loc 1 119 0 is_stmt 1
 359 01ec 0023     		mov	r3, #0
 360 01ee 3B60     		str	r3, [r7]
 361 01f0 30E0     		b	.L25
 362              	.L28:
 120:../Sources/main.c **** 						 {
 121:../Sources/main.c **** 								 TERMINAL_PRINTF("%X",LineScanImage1[i]);
 363              		.loc 1 121 0
 364 01f2 264B     		ldr	r3, .L32+40
 365 01f4 1A68     		ldr	r2, [r3]
 366 01f6 3B68     		ldr	r3, [r7]
 367 01f8 5B00     		lsl	r3, r3, #1
 368 01fa D318     		add	r3, r2, r3
 369 01fc 1B88     		ldrh	r3, [r3]
 370 01fe 9BB2     		uxth	r3, r3
 371 0200 1D49     		ldr	r1, .L32+20
 372 0202 234A     		ldr	r2, .L32+44
 373 0204 081C     		mov	r0, r1
 374 0206 111C     		mov	r1, r2
 375 0208 1A1C     		mov	r2, r3
 376 020a FFF7FEFF 		bl	Qprintf
 122:../Sources/main.c **** 								 if(i==127)
 377              		.loc 1 122 0
 378 020e 3B68     		ldr	r3, [r7]
 379 0210 7F2B     		cmp	r3, #127
 380 0212 0ED1     		bne	.L26
 123:../Sources/main.c **** 									 TERMINAL_PRINTF("\r\n",LineScanImage1[i]);
 381              		.loc 1 123 0
 382 0214 1D4B     		ldr	r3, .L32+40
 383 0216 1A68     		ldr	r2, [r3]
 384 0218 3B68     		ldr	r3, [r7]
 385 021a 5B00     		lsl	r3, r3, #1
 386 021c D318     		add	r3, r2, r3
 387 021e 1B88     		ldrh	r3, [r3]
 388 0220 9BB2     		uxth	r3, r3
 389 0222 1549     		ldr	r1, .L32+20
 390 0224 154A     		ldr	r2, .L32+24
 391 0226 081C     		mov	r0, r1
 392 0228 111C     		mov	r1, r2
 393 022a 1A1C     		mov	r2, r3
 394 022c FFF7FEFF 		bl	Qprintf
 395 0230 0DE0     		b	.L27
 396              	.L26:
 124:../Sources/main.c **** 								 else
 125:../Sources/main.c **** 									 TERMINAL_PRINTF(",",LineScanImage1[i]);
 397              		.loc 1 125 0
 398 0232 164B     		ldr	r3, .L32+40
 399 0234 1A68     		ldr	r2, [r3]
 400 0236 3B68     		ldr	r3, [r7]
 401 0238 5B00     		lsl	r3, r3, #1
 402 023a D318     		add	r3, r2, r3
 403 023c 1B88     		ldrh	r3, [r3]
 404 023e 9BB2     		uxth	r3, r3
 405 0240 0D49     		ldr	r1, .L32+20
 406 0242 144A     		ldr	r2, .L32+48
 407 0244 081C     		mov	r0, r1
 408 0246 111C     		mov	r1, r2
 409 0248 1A1C     		mov	r2, r3
 410 024a FFF7FEFF 		bl	Qprintf
 411              	.L27:
 119:../Sources/main.c **** 						 for(i=0;i<128;i++)
 412              		.loc 1 119 0
 413 024e 3B68     		ldr	r3, [r7]
 414 0250 0133     		add	r3, r3, #1
 415 0252 3B60     		str	r3, [r7]
 416              	.L25:
 119:../Sources/main.c **** 						 for(i=0;i<128;i++)
 417              		.loc 1 119 0 is_stmt 0
 418 0254 3B68     		ldr	r3, [r7]
 419 0256 7F2B     		cmp	r3, #127
 420 0258 CBD9     		bls	.L28
 126:../Sources/main.c **** 						}										
 127:../Sources/main.c **** 							
 128:../Sources/main.c **** 					}
 129:../Sources/main.c **** 					
 130:../Sources/main.c **** 
 131:../Sources/main.c **** 
 132:../Sources/main.c **** 				break;
 421              		.loc 1 132 0 is_stmt 1
 422 025a 01E0     		b	.L31
 423              	.L30:
  92:../Sources/main.c **** 				break;
 424              		.loc 1 92 0
 425 025c C046     		mov	r8, r8
 426 025e 00E0     		b	.L14
 427              	.L31:
 428              		.loc 1 132 0
 429 0260 C046     		mov	r8, r8
 430              	.L14:
 133:../Sources/main.c **** 			}
 134:../Sources/main.c **** 	}
 431              		.loc 1 134 0
 432 0262 D4E6     		b	.L29
 433              	.L33:
 434              		.align	2
 435              	.L32:
 436 0264 80F00F40 		.word	1074786432
 437 0268 40F00F40 		.word	1074786368
 438 026c 00000000 		.word	TFC_Ticker
 439 0270 00F10F40 		.word	1074786560
 440 0274 00000000 		.word	LineScanImageReady
 441 0278 00000000 		.word	SDA_SERIAL_OUTGOING_QUEUE
 442 027c 00000000 		.word	.LC3
 443 0280 04000000 		.word	.LC5
 444 0284 00000000 		.word	LineScanImage0
 445 0288 08000000 		.word	.LC8
 446 028c 00000000 		.word	LineScanImage1
 447 0290 0C000000 		.word	.LC11
 448 0294 10000000 		.word	.LC13
 449              		.cfi_endproc
 450              	.LFE0:
 452              		.text
 453              	.Letext0:
 454              		.file 2 "C:/Freescale/CW MCU v10.4/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 455              		.file 3 "D:/Module_ProjetP3/Software/Fscup/Project_Headers/MKL25Z4.h"
 456              		.file 4 "D:/Module_ProjetP3/Software/Fscup/Project_Headers/TFC\\TFC_Queue.h"
 457              		.file 5 "D:/Module_ProjetP3/Software/Fscup/Project_Headers/TFC\\TFC_ARM_SysTick.h"
 458              		.file 6 "D:/Module_ProjetP3/Software/Fscup/Project_Headers/TFC\\TFC_LineScanCamera.h"
 459              		.file 7 "D:/Module_ProjetP3/Software/Fscup/Project_Headers/TFC\\TFC_UART.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Michael\AppData\Local\Temp\ccfrKBDT.s:18     .rodata:00000000 $d
C:\Users\Michael\AppData\Local\Temp\ccfrKBDT.s:34     .text.main:00000000 $t
C:\Users\Michael\AppData\Local\Temp\ccfrKBDT.s:39     .text.main:00000000 main
C:\Users\Michael\AppData\Local\Temp\ccfrKBDT.s:436    .text.main:00000264 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
TFC_Init
TFC_Task
TFC_GetDIP_Switch
TFC_ReadPot
TFC_SetServo
TFC_SetBatteryLED_Level
TFC_SetMotorPWM
Qprintf
TFC_Ticker
LineScanImageReady
SDA_SERIAL_OUTGOING_QUEUE
LineScanImage0
LineScanImage1
